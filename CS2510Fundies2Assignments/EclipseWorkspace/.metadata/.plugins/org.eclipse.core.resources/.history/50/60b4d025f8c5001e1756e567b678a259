import tester.Tester;

// to represent ratios of ingredients in a cake in ounces
class CakeRecipe {
  double flour;
  double sugar;
  double eggs;
  double butter;
  double milk;

  CakeRecipe(double flour, double sugar, double eggs, double butter, double milk) {
    if (Math.abs(flour - sugar) < 0.0001) {
      this.flour = flour;
      this.sugar = sugar;
    }
    else {
      throw new IllegalArgumentException("Flour and sugar ratio not equal");
    }

    if (eggs - butter < 0.0001) {
      this.eggs = eggs;
      this.butter = butter;
    }
    else {
      throw new IllegalArgumentException("Eggs and butter ratio not equal");
    }

    if (((eggs + milk) - sugar) < 0.0001) {
      this.milk = milk;
    }
    else {
      throw new IllegalArgumentException("Eggs + milk ratio not equal to sugar ratio");
    }

  }

  // NEW CONSTRUCTOR
  CakeRecipe(double flour, double eggs, double milk) {
    this(flour, flour, eggs, eggs, milk);
  }

  // NEW CONSTRUCTOR
  CakeRecipe(double flour, double eggs, double milk, boolean areVolumes) {
    if (areVolumes) {
      this.flour = flour * 4.25;
      this.sugar = this.flour;
      this.eggs = eggs * 1.75;
      this.butter = this.eggs;
      this.milk = milk * 8;
    }
    else {
      new CakeRecipe(flour, eggs, milk);
    }
  }

  boolean sameRecipe(CakeRecipe other) {
    return (Math.abs(this.flour - other.flour) < 0.0001)
        && (Math.abs(this.eggs - other.eggs) < 0.0001) && (Math.abs(this.milk - other.milk) < 0.0001);
  }
}

// examples of cake recipes
class ExamplesCakes {
  ExamplesCakes() {

  }

  CakeRecipe cakeRecipe1 = new CakeRecipe(14, 14, 3, 3, 11);
  CakeRecipe cakeRecipe2 = new CakeRecipe(19.2, 19.2, 4, 4, 15.2);
  CakeRecipe cakeRecipe3 = new CakeRecipe(17.8, 17.8, 5.7, 5.7, 12.1);
  CakeRecipe cakeRecipe4 = new CakeRecipe(7, 2, 5);
  CakeRecipe cakeRecipe5 = new CakeRecipe(8.5, 5.1, 3.4);
  CakeRecipe cakeRecipe6 = new CakeRecipe(6, 3, 3, true);
  CakeRecipe cakeRecipe7 = new CakeRecipe(7, 3, 4, false);
  CakeRecipe cakeRecipe8 = new CakeRecipe(10.5, 6.1, 4.4, true);
  CakeRecipe cakeRecipe9 = new CakeRecipe(25.7, 16.3, 9.4, false);
  
  // test method for illegal argument exception
  boolean checkConstuctorErrors(Tester t) {
    return
        t.checkConstructorException(
            new IllegalArgumentException("Flour and sugar ratio not equal"),
            "CakeRecipe",
            15, 12, 9, 9, 3)
        && t.checkConstructorException(
            new IllegalArgumentException("Eggs and butter ratio not equal"),
            "CakeRecipe",
            15, 15, 5, 8, 10)
        && t.checkConstructorException(
            new IllegalArgumentException("Eggs + milk ratio not equal to sugar ratio"),
            "CakeRecipe",
            11, 11, 6, 6, 30);
  }
  
}
