// import Tester.tester;

// to represent ratios of ingredients in a cake in ounces
class CakeRecipe {
  double flour;
  double sugar;
  double eggs;
  double butter;
  double milk;

  CakeRecipe(double flour, double sugar, double eggs, double butter, double milk) {
    if (flour == sugar) {
      this.flour = flour;
      this.sugar = sugar;
    }
    else {
      throw new IllegalArgumentException("Flour and sugar ratio not equal");
    }

    if (eggs == butter) {
      this.eggs = eggs;
      this.butter = butter;
    }
    else {
      throw new IllegalArgumentException("Eggs and butter ratio not equal");
    }

    if ((eggs + milk) == sugar) {
      this.milk = milk;
    }
    else {
      throw new IllegalArgumentException("Eggs + milk ratio not equal to sugar ratio");
    }

  }

  // NEW CONSTRUCTOR
  CakeRecipe(double flour, double eggs, double milk) {
    this(flour, flour, eggs, eggs, milk);
  }

  // NEW CONSTRUCTOR
  CakeRecipe(double flour, double eggs, double milk, boolean areVolumes) {
    if (areVolumes) {
      this.flour = flour * 4.25;
      this.sugar = this.flour;
      this.eggs = eggs * 1.75;
      this.butter = this.eggs;
      this.milk = milk * 8;
    }
    else {
      new CakeRecipe(flour, eggs, milk);
    }
  }

  boolean sameRecipe(CakeRecipe other) {
    return (Math.abs(this.flour - other.flour) < 0.001)
        && (Math.abs(this.eggs - other.eggs) < 0.001) && (Math.abs(this.milk - other.milk) < 0.001);
  }
}

// examples of cake recipes
class ExamplesCakes {
  ExamplesCakes() {

  }

  CakeRecipe cakeRecipe1 = new CakeRecipe(14, 14, 3, 3, 11);
}
